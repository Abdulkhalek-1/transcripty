"""
This type stub file was generated by pyright.
"""

import asyncio
from typing import Optional
from flet.fastapi.oauth_state import OAuthState
from flet_core.connection import Connection
from flet_core.page import Page

logger = ...
class FletAppManager:
    """
    Manage application sessions and their lifetime.
    """
    def __init__(self) -> None:
        ...
    
    @property
    def executor(self): # -> ThreadPoolExecutor:
        ...
    
    def get_pubsubhub(self, session_handler, loop: Optional[asyncio.AbstractEventLoop] = ...): # -> PubSubHub:
        ...
    
    async def start(self): # -> None:
        """
        Background task evicting expired app data. Must be called at FastAPI application startup.
        """
        ...
    
    async def shutdown(self): # -> None:
        """
        Cleanup temporary Flet resources on application shutdown.
        """
        ...
    
    async def get_session(self, session_id: str) -> Optional[Page]:
        ...
    
    async def add_session(self, session_id: str, conn: Page): # -> None:
        ...
    
    async def reconnect_session(self, session_id: str, conn: Connection): # -> None:
        ...
    
    async def disconnect_session(self, session_id: str, session_timeout_seconds: int): # -> None:
        ...
    
    async def delete_session(self, session_id: str): # -> None:
        ...
    
    def store_state(self, state_id: str, state: OAuthState): # -> None:
        ...
    
    def retrieve_state(self, state_id: str) -> Optional[OAuthState]:
        ...
    
    def add_temp_dir(self, temp_dir: str): # -> None:
        ...
    
    def delete_temp_dirs(self): # -> None:
        ...
    


app_manager = ...
